Template:-

vector<vector<int>>FloydWarshal(int n,vector<vector<int>>&edges){
    
    vector<vector<int>>distance(n,vector<int>(n,INT_MAX));
    for(int i=0;i<n;i++){
        distance[i][i]=0;
    }
    for(auto it:edges){
        distance[it[0]][it[1]]=it[2];
    }
    
    for (int k = 0; k < n; k++) {
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                if(distance[i][k]==INT_MAX || distance[k][j]==INT_MAX)continue;
                distance[i][j] = min(distance[i][j],distance[i][k] + distance[k][j]);
            }
        }
    }

    //Detect negative cycles
    for (int i = 0; i < n; i++) {
        if (distance[i][i] < 0) {
            return {-1};
        }
    }
    return distance;
}

Time Complexity:-O(n^3)

Application:-
All pair shortest path.
handles negative Edge weights.
detects negative cycle.
